<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2018, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
  ~
  ~ This software is the property of WSO2 Inc. and its suppliers, if any.
  ~ Dissemination of any information or reproduction of any material contained
  ~ herein is strictly forbidden, unless permitted by WSO2 in accordance with
  ~ the WSO2 Commercial License available at http://wso2.com/licenses. For specific
  ~ language governing the permissions and limitations under this license,
  ~ please see the license as well as any agreement youâ€™ve entered into with
  ~ WSO2 governing the purchase of this software and any associated services.
  ~
  -->

<Server xmlns="http://wso2.org/projects/carbon/open-banking.xml">

    <JDBCPersistenceManager>
        <DataSource>
            <!-- Include a data source name (jndiConfigName) from the set of data
                sources defined in master-datasources.xml -->
            <Name>jdbc/WSO2OpenBankingDB</Name>
        </DataSource>
        <!-- If the consent databases are created from another place and if it is
            required to skip schema initialization during the server start up, set the
            following property to "true". -->
        <!-- <SkipDBSchemaCreation>false</SkipDBSchemaCreation> -->
    </JDBCPersistenceManager>

    <EventNotifications>
        <IsEnabled>false</IsEnabled>
        <TokenIssuer>www.openbank.com</TokenIssuer>
        <!--Expiry time in seconds. Default is 180 seconds-->
        <NotificationExpiryTime>180</NotificationExpiryTime>
        <NotificationAPIUrl>https://obam:8243/open-banking/v3.1/event-notification</NotificationAPIUrl>
    </EventNotifications>

    <MultiAuthorization>
        <DaysToExpireRequest>3</DaysToExpireRequest>
    </MultiAuthorization>
    <!--This configuration defines the open banking specification that is deployed.
    Allowed values are:
        1. UK
        2. BERLIN
        3. STET
    -->
    <DeployedSpecification>BERLIN</DeployedSpecification>

    <ConsentMgt>
        <IsEnabled>false</IsEnabled>
    </ConsentMgt>

    <!--Configure endpoint to retrieve payable accounts passing userId https://localhost:9443/as400/payable-accounts/{userId} -->
    <!-- Configure endpoint to retrieve BERLIN payable accounts passing PSU-ID as a path parameter. https://localhost:9443/open-banking-berlin/services/v130/accounts/payable -->
    <PayableAccountsRetrieveEndpoint>http://obam:9763/open-banking-berlin/services/v130/accounts/payable</PayableAccountsRetrieveEndpoint>
    <!-- Configure endpoint to retrieve UK sharable accounts passing userId https://localhost:9443/as400/sharable-accounts/{userId}  -->
    <!-- Configure endpoint to retrieve BERLIN sharable accounts passing PSU-ID as a path parameter. https://localhost:9443/open-banking-berlin/services/v130/accounts/shareable -->
    <SharableAccountsRetrieveEndpoint>http://obam:9763/open-banking-berlin/services/v130/accounts/shareable</SharableAccountsRetrieveEndpoint>

    <Berlin>

        <!--This configuration is added to mandate the optional parameters sent in the request. ASPSP can decide on the
        optional parameters that they need to be mandated. Ex: PSU-ID, PSU-ID-Type, PSU-Corporate-ID, PSU-Corporate-ID-Type-->
        <MandatoryParameters>
            <!--<Parameter>PSU-ID</Parameter>-->
            <!--<Parameter>PSU-ID-Type</Parameter>-->
        </MandatoryParameters>
        <withBalanceSupport>true</withBalanceSupport>

        <!--
        Configurations regarding the Strong Customer Authentication
        -->
        <SCA>
            <!--
                PrioritizeTPPPreference denotes whether to give priority to the TPP-Redirect-Preferred or not.
            -->
            <PrioritizeTPPPreference>false</PrioritizeTPPPreference>

            <!--
            SelectedSCAApproach denotes the preferred SCA Approach.
            Allowed values are:
            1. REDIRECT (OAUTH2 is subsumed by this)
            2. DECOUPLED
            3. EMBEDDED
            -->
            <SelectedSCAApproach>REDIRECT</SelectedSCAApproach>

            <!--
            Dictate if Authorization is required for payment cancellation.
            true: PSU is required to authorize the cancellation by completing authorization flow
            false: Authorization not required.
            -->
            <AuthorizeCancellation>false</AuthorizeCancellation>

            <!--Endpoint to retrieve OIDC Discovery metadata-->
            <OAuthMetadataEndpoint>https://obam:8243/.well-known/openid-configuration</OAuthMetadataEndpoint>

            <!--The link to the payment initiation resource, which needs to be updated by the PSU identification.
            This might be used in an embedded, redirect or decoupled SCA Approach, where the PSU ID was missing
            in the first request. -->
            <UpdatePSUIdentification>https://obkm:9446</UpdatePSUIdentification>

            <!--The link to the payment initiation resource, which needs to be updated by a PSU password and eventually
             the PSU identification if not delivered yet. This is used in case of the Embedded or Decoupled SCA
             approach.-->
            <UpdatePSUAuthentication>https://obkm:9446</UpdatePSUAuthentication>

            <!--This is a link to a resource, where the TPP can select the applicable strong customer authentication
            methods for the PSU, if there were several available authentication method-->
            <SelectAuthenticationMethod>https://obkm:9446</SelectAuthenticationMethod>

            <!--The link to the payment initiation resource, where the "Payment Authorisation Request" is sent to.
            This is the link to the resource which will authorise the payment by checking the SCA authentication data
            within the Embedded SCA approach.-->
            <AuthorizeTransaction>https://obkm:9446</AuthorizeTransaction>

            <!-- Configure SCA Methods for API responses -->
            <SCAMethods>
                <AuthenticationObject>
                    <AuthenticationType>SMS_OTP</AuthenticationType>
                    <AuthenticationVersion>1.0</AuthenticationVersion>
                    <AuthenticationMethodId>sms-otp</AuthenticationMethodId>
                    <Name>SMS OTP on Mobile</Name>
                    <Explanation>SMS based one time password</Explanation>
                    <Default>true</Default>
                </AuthenticationObject>
            </SCAMethods>
        </SCA>

        <AccountsRetrieveEndpoint>https://localhost:9443/open-banking-berlin/services/accounts/accounts</AccountsRetrieveEndpoint>

        <AccountConsentSelfLink>https://obam:8243/xs2a/1.3.3/consents/%s</AccountConsentSelfLink>
        <PaymentResourceSelfLink>https://obam:8243/xs2a/1.3.3/%s/%s/%s</PaymentResourceSelfLink>

        <!--The time interval for duplicate checking of payment consent initiation requests using X-Request-ID-->
        <DuplicateCheck>
            <TimeIntervalInMinutes>60</TimeIntervalInMinutes>
        </DuplicateCheck>
        <EnableIBANBasedAccountRetrievalValidation>true</EnableIBANBasedAccountRetrievalValidation>
        <Host>obam</Host>
        <Port>8243</Port>
        <AccountConsentsApiPath>/AccountsInfoAPI/v1.1.0/consents</AccountConsentsApiPath>
        <PaymentConsentsApiPath>/PaymentsAPI/v1.1.0/payments</PaymentConsentsApiPath>
        <!--Requested maximum frequency for an account access per day using a recurring consent-->
        <!--Maximum value is 4 unless agreed bilaterally between TPP and ASPSP-->
        <FrequencyPerDay>4</FrequencyPerDay>
    </Berlin>

    <UK>
        <CustomerCareOfficerRole>Internal/CustomerCareOfficer</CustomerCareOfficerRole>
        <XFAPIFinancialId>open-bank</XFAPIFinancialId>
        <PaymentAPIURL>https://obam:8243/open-banking/{version}/pisp/</PaymentAPIURL>
        <AccountAPIURL>https://obam:8243/open-banking/{version}/aisp/</AccountAPIURL>
        <FundsConfirmationAPIURL>https://obam:8243/open-banking/{version}/cbpii/</FundsConfirmationAPIURL>
        <!--configure the url to get details about the error-->
        <ErrorURL></ErrorURL>
        <Cache>
            <EnableConsentValidationCache>true</EnableConsentValidationCache>
            <!-- Expiry time for the consent validation info cache -->
            <ConsentValidationCacheExpiry>900</ConsentValidationCacheExpiry>
            <DefaultCacheTimeout>120000</DefaultCacheTimeout>
        </Cache>
        <UseConsentIdInPath>false</UseConsentIdInPath>

        <!--The following configuration is used to handle release management.
            E.g. If the resource's created specification version is v2.0, and the allowed versions for resource
            retrieval are 2.0 and 3.0, it can be denoted as:
            <UK200SupportedSpecsToRequest>UK200|UK300</UK200SupportedSpecsToRequest>-->
        <UK110SupportedSpecsToRequest>UK110|UK200|UK300</UK110SupportedSpecsToRequest>
        <UK200SupportedSpecsToRequest>UK200|UK300</UK200SupportedSpecsToRequest>
        <UK300SupportedSpecsToRequest>UK300</UK300SupportedSpecsToRequest>
        <!--Account permissions not supported by the ASPSP can be restricted for the TPP by specifying one or more permissions,
        separated by a pipe (|). By default, no permissions are restricted.
            E.g. ReadOffers|ReadPAN|ReadParty|ReadPartyPSU-->
        <RestrictedPermissions></RestrictedPermissions>
        <!--Payment data permissions supported by the ASPSP can be given access for the TPP by specifying one or more permissions,
        separated by a pipe (|). By default, create permission is granted-->
        <DataPermission>Create</DataPermission>
        <DCR>
            <!--the supported authentication methods for the token endpoint -->
            <TokenAuthentication>
                <Method>private_key_jwt</Method>
                <Method>client_secret_basic</Method>
            </TokenAuthentication>
            <!--the connection and read time out values for retrieving the remote jwks to validate the ssa and
            request jwt signatures during tpp registration-->
            <ConnectionTimeout>0</ConnectionTimeout>
            <ReadTimeout>0</ReadTimeout>
            <!--The endpoint urls are to access the rest APIs of API manager in order to
            create the application, service provider and generate keys for the application.
             -->
            <EndPointURL>
                <ServiceProviderCreation>/client-registration/v0.14/register</ServiceProviderCreation>
                <Application>/api/am/store/v0.14/applications</Application>
                <Token>/token</Token>
                <KeyGeneration>/api/am/store/v0.14/applications/generate-keys</KeyGeneration>
                <ApiSearch>/api/am/store/v0.14/apis</ApiSearch>
                <ApiSubscribe>/api/am/store/v0.14/subscriptions/multiple</ApiSubscribe>
            </EndPointURL>
            <!--if true validate the policy,client,terms of service,logo uris -->
            <EnableURIValidation>false</EnableURIValidation>
            <!--if true validate the hostnames of policy,client,terms of service, logo uris match with the hostname of redirect uri-->
            <EnableHostNameValidation>false</EnableHostNameValidation>
            <APISubscriptions>
                <PISP>
                    <APIContext>/open-banking/v3.1/pisp</APIContext>
                    <APIContext>/open-banking/v3.0/pisp</APIContext>
                    <APIContext>/open-banking/v2.0/pisp</APIContext>
                </PISP>
                <AISP>
                    <APIContext>/open-banking/v3.1/aisp</APIContext>
                    <APIContext>/open-banking/v3.0/aisp</APIContext>
                    <APIContext>/open-banking/v2.0/aisp</APIContext>
                </AISP>
            </APISubscriptions>
            <!-- Use SoftwareID in SSA as Application Name-->
            <UseSoftwareIdAsApplicationName>false</UseSoftwareIdAsApplicationName>
        </DCR>
        <PaymentRestrictions>
            <MaximumInstructedAmount>1000.00</MaximumInstructedAmount>

            <!--Frequency patterns that are supported by the ASPSP can be configured as a regex pattern separated by
            a pipe (|). By default, ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
            regex is supported. If you want to change the default pattern uncomment the following configuration
            and configure the regex pattern
            <PermittedFrequencyPattern></PermittedFrequencyPattern>
            before v1.3.0, there was a configuration to configure restricted frequency pattern.
            But it is now deprecated <RestrictedFrequencyPattern></RestrictedFrequencyPattern> -->

            <!--The allowed pattern for configuring the amount for domestic standing orders-->
            <!-- <AllowedAmountPattern></AllowedAmountPattern>-->

            <!--The allowed pattern for configuring the currency for domestic scheduled payments-->
            <!--<AllowedCurrencyPattern></AllowedCurrencyPattern>-->

            <MaximumFuturePaymentDays>90</MaximumFuturePaymentDays>
            <!--
            Configurations regarding the handling of Payment requests after a cut off DateTime
            -->
            <CutOffDateTime>
                <!--IsEnabled denotes whether a CutOffDateTime is to be enforced by the ASPSP -->
                <Enabled>false</Enabled>
                <!--SelectedPolicy denotes the preferred Approach to handling requests past the CutOffDateTime.
                 Allowed values are:
                 1. REJECT - Reject all requests arriving past the DateTime value
                 2. ACCEPT - Accept all requests arriving past the DateTime value and return ExpectedExecutionDateTime
                 and ExpectedSettlementDateTime.
                 -->
                <CutOffDateTimePolicy>REJECT</CutOffDateTimePolicy>
                <!--Expected format for all dates - hh:mm:ss.ffffff+|-hh:mm -->
                <!--The Daily time requests are to be cut off at -->
                <DailyCutOffTime>17:30:00+00:00</DailyCutOffTime>
                <!--Need to be set if the SelectedPolicy is set to ACCEPT.
                    The ExpectedExecutionTime and the ExpectedSettlementTime for the next day -->
                <ExpectedExecutionTime>10:00:00+00:00</ExpectedExecutionTime>
                <ExpectedSettlementTime>11:00:00+00:00</ExpectedSettlementTime>
            </CutOffDateTime>
        </PaymentRestrictions>
        <!--The expiry time for the issuer certificate and the subjectDN of the sent transport certificate stored in cache-->
        <CertificateValidationCacheExpiry>3600</CertificateValidationCacheExpiry>
        <ConsentReAuthentication>
            <!--In consent re-authentication of Accounts flow, during authorization, the PSU can be allowed to change
             the selected Account.
             If the following config is 'true', the Account bound to the consent will be
             updated during re-authentication. If set to 'false', the Account will not be updated.-->
            <EnableAccountUpdateByPSU>false</EnableAccountUpdateByPSU>
        </ConsentReAuthentication>

        <!--
            This configuration applies for Request Signing
            for `x-jws-signature`.
         -->
        <SigningConfiguration>
            <!-- Enable Signing -->
            <Enable>true</Enable>
            <OBIE>
                <!--
                    Trusted Anchor Configuration
                    openbanking.org.uk specific Trust Anchor definitions
                -->
                <TrustedAnchors>
                    <!-- Trust Anchor used in signing JOSE -->
                    <Signing>openbanking.org.uk</Signing>
                    <!--
                        Multiple values supported with `|` delimiter
                        IE - trustanchor.org|trustanchor.org.uk
                    -->
                    <Validation>openbanking.org.uk</Validation>
                </TrustedAnchors>
                <!-- OBIE Organization Id -->
                <OrganizationId>ABC1234</OrganizationId>
            </OBIE>
            <!-- Default Singing Algorithm is PS256, to support others uncomment line below -->
            <!--<Algorithm>RS256</Algorithm>-->

            <!-- The following specified APIs will be mandated for message signing. -->
            <MandatedAPIs>
                <APIContext>/open-banking/v3.0/event-notification/</APIContext>
                <APIContext>/open-banking/v3.0/pisp/</APIContext>
                <APIContext>/open-banking/v3.1/event-notification/</APIContext>
                <APIContext>/open-banking/v3.1/pisp/</APIContext>
            </MandatedAPIs>
        </SigningConfiguration>

        <!-- The following configuration specifies the signature algorithms that are allowed in the TPP requests.
        The JWTs signed in algorithms that are not in the following list, will be rejected. If the configuration
        is not present, no validation will occur and any algorithm will be passed through.
        Allowed values are:
            1. PS256
            2. RS256
        -->
        <AllowedInboundSignatureAlgorithms>
            <Algorithm>PS256</Algorithm>
        </AllowedInboundSignatureAlgorithms>


        <!--Configure whether need to validate debtor account when sent in initiation payload for UK payments-->
        <ValidateDebtorAccount>true</ValidateDebtorAccount>
    </UK>

    <STET>
        <Host>obam</Host>
        <Port>8243</Port>
        <MaxNumberOfTransactions>5</MaxNumberOfTransactions>
        <DuplicateCheck>
            <TimeIntervalInMinutes>60</TimeIntervalInMinutes>
        </DuplicateCheck>
        <!--
       Configurations regarding the Strong Customer Authentication
       -->
        <SCA>
            <!--SelectedSCAApproach denotes the preferred SCA Approach.
           Allowed values are:
           1. REDIRECT (OAUTH2 is subsumed by this)
           2. DECOUPLED
           3. EMBEDDED
           -->
            <SelectedSCAApproach>REDIRECT</SelectedSCAApproach>
            <!--The link to the payment initiation resource, where the "Payment Authorisation Request" is sent to.
                        This is the link to the resource which will authorise the payment by checking the SCA authentication data
                        within the REDIRECT SCA approach.-->
            <AuthorizationEndpoint>https://obam:8243/authorize</AuthorizationEndpoint>
        </SCA>
        <!--
        Allowed values for account reference type
            1. iban
            2. other
        -->
        <AccountReferenceType>iban</AccountReferenceType>

        <!--Configure endpoint to retrieve payable accounts passing userId https://localhost:9443/as400/payable-accounts/{userId} -->
        <AccountsRetrieveEndpoint>http://obam:9763/open-banking/services/bankaccounts/bankaccountservice/payable-accounts</AccountsRetrieveEndpoint>

    </STET>
    <APISecurity>
        <Global>
            <Username>admin@wso2.com</Username>
            <Password>wso2123</Password>
        </Global>
    </APISecurity>
    <Authorize>
        <Steps>
            <Retrieve>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.retrieval.OBConsentRetrievalStep"
                      priority="1"/>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.retrieval.AccountListRetrievalStep"
                      priority="2"/>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.retrieval.OBReportingRetrievalStep"
                      priority="3"/>
                <!-- Step Below Is Mandatory For Berlin -->
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.retrieval.berlin.AuthorisationInfoRetrievalStep"
                      priority="4"/>
            </Retrieve>
            <Persist>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.persist.MultipleAuthPersistenceStep"
                      priority="1"/>
                <!-- Step Below Is Mandatory For Berlin -->
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.persist.berlin.AuthorisationInfoPersistenceStep"
                      priority="2"/>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.persist.UserConsentPersistenceStep"
                      priority="3"/>
                <Step class="com.wso2.finance.open.banking.consent.authorize.steps.impl.steps.persist.OBReportingPersistenceStep"
                      priority="4"/>
            </Persist>
        </Steps>
    </Authorize>
    <CertificateManagement>
        <!-- In order to enable the client certificate validation feature (Certificate Expiry, Signature and
        Revocation validation during MTLS), the following module needs to be engaged under the "Global Engaged
        Modules" section in the axis2.xml file.

        <module ref="mtlscertvalidator"/>
        -->

        <!--Set the value of the transport certificate header sent in the request if MTLS is terminated before the
        gateway default value is ssl.client.auth.cert.X509-->
        <TransportCertificateHeader>ssl.client.auth.cert.X509</TransportCertificateHeader>

        <!-- Expiry time for the cache (in seconds) for storing the validation result of the certificates-->
        <ClientCertificateCacheExpiry>3600</ClientCertificateCacheExpiry>

        <!-- Enable certificate OCSP and CRL validation -->
        <CertificateRevocationValidationEnabled>true</CertificateRevocationValidationEnabled>
    </CertificateManagement>
    <SCA>
        <IdpName>SMSAuthentication</IdpName>
    </SCA>

    <BIServer>
        <!-- Include all configurations related to OBBI component -->
        <DataPublishing>
            <!-- Include all configurations related to Data publishing -->

            <!-- Enable data publishing in WSO2 Open Banking-->
            <Enabled>false</Enabled>

            <!-- Server URL of the remote BI server used to collect statistics. Must
            be specified in protocol://hostname:port/ format. -->
            <ServerURL>{tcp://obbi:7612}</ServerURL>
            <!-- Administrator username to login to the BI server for data publishing. -->
            <Username>admin@wso2.com@carbon.super</Username>
            <!-- Administrator password to login to the BI server for data publishing. -->
            <Password>wso2123</Password>
        </DataPublishing>
        <TRA>
            <!-- Include all configurations related to Transaction Risk Analysis -->

            <!-- Enable TRA in WSO2 Open Banking-->
            <IsEnabled>false</IsEnabled>
            <!-- following configurations are used to enable TRA for specific flows only-->
            <!-- Enable TRA for Payments-->
            <PaymentValidationEnabled>false</PaymentValidationEnabled>
            <!-- Enable TRA for Accounts-->
            <AccountValidationEnabled>false</AccountValidationEnabled>
            <!-- Configurations related to TRA Receivers-->
            <Receivers>
                <!-- Administrator username to login to the remote BI server. -->
                <Username>admin@wso2.com@carbon.super</Username>
                <!-- Administrator password to login to the remote BI server. -->
                <Password>wso2123</Password>
                <!-- Receiver URLs of the Siddhi Apps used to validate for TRA.-->
                <TRAAccountValidationURL>http://obbi:8007/TRAAccountValidationApp/TRAValidationStream</TRAAccountValidationURL>
                <TRAPaymentValidationURL>http://obbi:8007/TRAPaymentValidationApp/TRAValidationStream</TRAPaymentValidationURL>
            </Receivers>
            <TimePeriodOfRecurringPayment>90</TimePeriodOfRecurringPayment>
            <MaxFrequencyOfTransactionsWithoutSCA>5</MaxFrequencyOfTransactionsWithoutSCA>
            <TotalAmountLimitOfTransactionsWithoutSCA>100</TotalAmountLimitOfTransactionsWithoutSCA>
            <LastSCATimeLimit>90</LastSCATimeLimit>
            <TransactionAmountLimit>30</TransactionAmountLimit>
        </TRA>
        <FraudDetection>
            <!-- Include all configurations related to Fraud Detection -->

            <!-- Enable FD in WSO2 Open Banking-->
            <IsEnabled>false</IsEnabled>
            <!-- Configurations related to FD Receivers-->
            <Receivers>
                <!-- Administrator username to login to the remote BI server. -->
                <Username>admin@wso2.com@carbon.super</Username>
                <!-- Administrator password to login to the remote BI server. -->
                <Password>wso2123</Password>
                <!-- Receiver URLs of the Siddhi Apps used to validate for FD.-->
                <FraudDetectionURL>http://obbi:8007/FraudDetectionApp/FraudDetectionStream</FraudDetectionURL>
                <InvalidSubmissionURL>http://obbi:8006/InvalidSubmissionsApp/InvalidSubmissionsStream</InvalidSubmissionURL>
            </Receivers>
        </FraudDetection>
        <Reporting>
            <!-- Include all configurations related to Data Reporting -->

            <!-- All the configurations related to data reporting will be added here in future. -->
        </Reporting>
    </BIServer>

    <ACREnabled>false</ACREnabled>

    <OBIdentityRetriever>
        <!--
            Server Key configuration
            used for singing purposes IE - message signing
        -->
        <Server>
            <!-- alias the certificate is under -->
            <SigningCertificateAlias>wso2carbon</SigningCertificateAlias>
            <!-- Signing certificate alias for sandbox environment-->
            <SandboxSigningCertificateAlias>wso2carbon-sandbox</SandboxSigningCertificateAlias>
            <!-- KID value for primary signing certificate -->
            <SigningCertificateKid>1234</SigningCertificateKid>
            <!-- KID value for sandbox signing certificate -->
            <SandboxCertificateKid>5678</SandboxCertificateKid>
        </Server>
        <JWKS-Retriever>
            <SizeLimit>51200</SizeLimit>
            <ConnectionTimeout>2000</ConnectionTimeout>
            <ReadTimeout>2000</ReadTimeout>
        </JWKS-Retriever>
        <!-- Cache Configuration for Identity Retriever Cache -->
        <Cache>
            <ModifiedExpiryMinutes>15</ModifiedExpiryMinutes>
            <AccessedExpiryMinutes>15</AccessedExpiryMinutes>
        </Cache>
    </OBIdentityRetriever>
</Server>
