/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 *
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses.
 * For specific language governing the permissions and limitations under this
 * license, please see the license as well as any agreement youâ€™ve entered into
 * with WSO2 governing the purchase of this software and any associated services.
 */

@App:name("APIRawDataSubmissionApp")


@source(type='wso2event',  @map(type='wso2event'))
@source(type='grpc', ref='grpcSourceOB', @map(type='protobuf'))
define stream APIInputStream(CONSENT_ID string,TPP_ID string,CLIENT_ID string,USER_AGENT string,STATUS_CODE int,
                        STATUS_MESSAGE string,HTTP_METHOD string,RESPONSE_PAYLOAD_SIZE long,REQUEST_EXQ_START_TIME long,
                        BACKEND_REQ_START_TIME long, BACKEND_REQ_END_TIME long,BACKEND_LATENCY long,ELECTED_RESOURCE string,
                        AUTHORISATION_STATUS string,API_NAME string,TIMESTAMP long,API_SPEC_VERSION string,CUSTOMER_STATUS string);

@primaryKey('ID','ELECTED_RESOURCE')
@store(type='rdbms', datasource='OB_REPORTING_DB')
define table API_INVOCATION_RAW_DATA(ID string,CONSENT_ID string,TPP_ID string,CLIENT_ID string,USER_AGENT string,STATUS_CODE int,
                        STATUS_MESSAGE string,HTTP_METHOD string,RESPONSE_PAYLOAD_SIZE long,REQUEST_EXQ_START_TIME long,
                        BACKEND_REQ_START_TIME long, BACKEND_REQ_END_TIME long,BACKEND_LATENCY long,ELECTED_RESOURCE string,
                        AUTHORISATION_STATUS string,API_NAME string,TIMESTAMP long,API_SPEC_VERSION string,CUSTOMER_STATUS string);

@sink(type='inMemory',topic='apiInvocationRawData', @map(type='passThrough'))
define stream CDSMetricsRawStream(id string, statusCode int, respTime long, electedResource string, timestamp long, customerStatus string);

from APIInputStream
select UUID() as id, STATUS_CODE as statusCode, (BACKEND_REQ_END_TIME - REQUEST_EXQ_START_TIME) as respTime, ELECTED_RESOURCE as electedResource,
TIMESTAMP as timestamp, CUSTOMER_STATUS as customerStatus
insert into CDSMetricsRawStream;

from APIInputStream
select UUID() as ID,CONSENT_ID,TPP_ID,CLIENT_ID,USER_AGENT,STATUS_CODE,STATUS_MESSAGE,HTTP_METHOD,RESPONSE_PAYLOAD_SIZE,REQUEST_EXQ_START_TIME,
BACKEND_REQ_START_TIME,BACKEND_REQ_END_TIME,BACKEND_LATENCY,ELECTED_RESOURCE,AUTHORISATION_STATUS,API_NAME,TIMESTAMP,API_SPEC_VERSION,CUSTOMER_STATUS
insert into API_INVOCATION_RAW_DATA;
