/**
 * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 *
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses. For specific
 * language governing the permissions and limitations under this license,
 * please see the license as well as any agreement you've entered into with
 * WSO2 governing the purchase of this software and any associated services.
 **/
@App:name("InvalidSubmissionsApp")

@App:description('Receive payment submission events via HTTP transport and store')

@Source(type = 'http',
        receiver.url='http://obbi-worker:8006/InvalidSubmissionsApp/InvalidSubmissionsStream',
        basic.auth.enabled='false',
        @map(type='json'))
define stream InvalidSubmissionStream (applicationId string, userId string, consentId string, amount double);
--
----Store event data to database
--@primaryKey('applicationId')
--@store(type='rdbms', datasource='TRA_DB')
--define table ApplicationBlacklist(applicationId string);
--
--@primaryKey('applicationId')
--@store(type='rdbms', datasource='TRA_DB')
--define table InvalidSubmissionsHistory(applicationId string, userId string, consentId string, amount double);
--
--@info(name='updateApplicationBlacklist')
--from InvalidSubmissionStream[not(ApplicationBlacklist.applicationId == applicationId in ApplicationBlacklist)]
--select applicationId
--insert into ApplicationBlacklist;
--
--@info(name='persistInvalidSubmission')
--from InvalidSubmissionStream
--select *
--insert into InvalidSubmissionsHistory;
